from strands import Agent
from strands.models.openai import OpenAIModel
from strands.models import BedrockModel
from strands_tools import  calculator
import os
from dotenv import load_dotenv
load_dotenv()

apii_key="eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJHdTdoWFJuc2dZb1NvRURUQ1lmVkI2TmVqeU8tRlBQVEk2NlFOU1l3Rjc4In0.eyJleHAiOjE3NjA1NDcxNDMsImlhdCI6MTc2MDU0NTM0MywiYXV0aF90aW1lIjoxNzYwNTMxODQ0LCJqdGkiOiJvbnJ0YWM6OTc4ZTE0MmMtMmUzYi00ODNlLTU0M2YtMjdlMTMzZGU3NzY4IiwiaXNzIjoiaHR0cHM6Ly9pYW0tZGV2LmRldi5jeGFzdC5uZXQvYXV0aC9yZWFsbXMvcGhvZW5peF90ZW5hbnQiLCJhdWQiOlsicmVhbG0tbWFuYWdlbWVudCIsImFjY291bnQiXSwic3ViIjoiN2YxYTQwZTMtZDcxNC00NTFlLWI2YjUtMTQyYmRkMjAxZWRkIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiYXN0LWFwcCIsInNpZCI6IjA3Yjg0NDhlLThiNDQtNGJiYi05ZTI3LTVhZTZjZjc5Njc1NiIsImFsbG93ZWQtb3JpZ2lucyI6WyIqIiwiLyoiXSwicmVzb3VyY2VfYWNjZXNzIjp7InJlYWxtLW1hbmFnZW1lbnQiOnsicm9sZXMiOlsidmlldy1yZWFsbSIsInZpZXctaWRlbnRpdHktcHJvdmlkZXJzIiwibWFuYWdlLWlkZW50aXR5LXByb3ZpZGVycyIsImltcGVyc29uYXRpb24iLCJyZWFsbS1hZG1pbiIsImNyZWF0ZS1jbGllbnQiLCJtYW5hZ2UtdXNlcnMiLCJxdWVyeS1yZWFsbXMiLCJ1bWFfcHJvdGVjdGlvbiIsIm1hbmFnZS1rZXlzIiwidmlldy1hdXRob3JpemF0aW9uIiwicXVlcnktY2xpZW50cyIsInF1ZXJ5LXVzZXJzIiwibWFuYWdlLWV2ZW50cyIsIm1hbmFnZS1yZWFsbSIsInZpZXctZXZlbnRzIiwidmlldy11c2VycyIsInZpZXctY2xpZW50cyIsIm1hbmFnZS1hdXRob3JpemF0aW9uIiwibWFuYWdlLWdyb3VwcyIsIm1hbmFnZS1jbGllbnRzIiwicXVlcnktZ3JvdXBzIl19LCJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCByb2xlcyBncm91cHMgZW1haWwgcHJvZmlsZSBhc3QtYXBpIGlhbS1hcGkiLCJ0ZW5hbnRfaWQiOiJpYW0tZGV2LmRldi5jeGFzdC5uZXQ6OjUwZWI4MTRjLTkwMzAtNGQyNC04ZGI1LTAzMTBiZTQ3ZmY5MyIsInRlbmFudF9uYW1lIjoicGhvZW5peF90ZW5hbnQiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicm9sZXMiOlsiZGVmYXVsdC1yb2xlcy1waG9lbml4X3RlbmFudCIsIm1hbmFnZS11c2VycyIsIm1hbmFnZS1rZXlzIiwidW1hX2F1dGhvcml6YXRpb24iLCJtYW5hZ2UtZ3JvdXBzIiwidXNlciIsIm1hbmFnZS1jbGllbnRzIiwiaWFtLWFkbWluIl0sImV1bGEtYWNjZXB0ZWQiOnRydWUsImdyb3VwcyI6W10sImdyb3Vwc05hbWVzIjpbXSwiY2ItdXJsIjoiaHR0cHM6Ly9jaGVja21hcnguY29kZWJhc2hpbmcuY29tIiwicHJlZmVycmVkX3VzZXJuYW1lIjoiYWRtaW4iLCJnaXZlbl9uYW1lIjoiT3JnIiwiYXN0LWJhc2UtdXJsIjoiaHR0cHM6Ly9hc3QtbWFzdGVyLWNvbXBvbmVudHMuZGV2LmN4YXN0Lm5ldCIsInNmLWlkIjoiMDAxM3owMDAwMkx6Y3ZBQUFSIiwicm9sZXNfYXN0IjpbImNyZWF0ZS1wcm9qZWN0IiwidXBkYXRlLXJlc3VsdC1jdXN0b20tc3RhdGUtdGVzdGN1c3RvbTE0IiwiYW5hbHl0aWNzLXNjYW4tZGFzaGJvYXJkLXZpZXciLCJkZWxldGUtYXBwbGljYXRpb24iLCJkZWxldGUtd2ViaG9vayIsInVwZGF0ZS1jbG91ZC1jb25uZWN0aW9ucyIsImRhc3QtYWRtaW4iLCJ1cGRhdGUtcmVzdWx0LXN0YXRlLXN0YXRlMSIsImRhc3QtZGVsZXRlLXNjYW4iLCJjcmVhdGUtd2ViaG9vayIsImRlbGV0ZS1jbG91ZC1jb25uZWN0aW9ucyIsImFuYWx5dGljcy1leGVjdXRpdmUtb3ZlcnZpZXctdmlldyIsInVwZGF0ZS1yZXN1bHQtY3VzdG9tLXN0YXRlLWF0aXNoNCIsInVwZGF0ZS1zY2FuIiwidXBkYXRlLXJlc3VsdC1zZXZlcml0eSIsInVwZGF0ZS1yZXN1bHQtc3RhdGUtZGVtb3Nub3cxIiwidXBkYXRlLXJlc3VsdC1jdXN0b20tc3RhdGUiLCJ1cGRhdGUtcmVzdWx0LWN1c3RvbS1zdGF0ZS1uZXdjdXN0b21zdGF0ZSIsImRlbGV0ZS1wcm9qZWN0IiwidXBkYXRlLWxpbmtzIiwib3Blbi1mZWF0dXJlLXJlcXVlc3QiLCJkYXN0LXVwZGF0ZS1yZXN1bHQtc3RhdGUtbm90LWV4cGxvaXRhYmxlIiwidmlldy1wb2xpY3ktbWFuYWdlbWVudCIsInVwZGF0ZS1yZXN1bHQtc3RhdGUtbm90LWV4cGxvaXRhYmxlIiwidmlldy1saW5rcyIsImFzdC1yaXNrLW1hbmFnZXIiLCJtYW5hZ2UtcmVwb3J0cyIsInZpZXctcXVlcmllcyIsIm1hbmFnZS13ZWJob29rIiwidXBkYXRlLXJlc3VsdC1jdXN0b20tc3RhdGUtdGVqYWwyIiwidXBkYXRlLXJlc3VsdC1jdXN0b20tc3RhdGUtZGVtbyIsInVwZGF0ZS1yZXN1bHQtY3VzdG9tLXN0YXRlLXRlamFsMSIsInVwZGF0ZS1zY2hlZHVsZS1zY2FuIiwidXBkYXRlLXJlc3VsdC1jdXN0b20tc3RhdGUtc3BhY2UiLCJ1cGRhdGUtcnVudGltZS1jbG91ZCIsImNyZWF0ZS1hcHBsaWNhdGlvbiIsInF1ZXJpZXMtZWRpdG9yIiwidXBkYXRlLXF1ZXJ5IiwidXBkYXRlLXJlc3VsdC1ub3QtZXhwbG9pdGFibGUiLCJkYXN0LXVwZGF0ZS1zY2FuIiwidXBkYXRlLXByb2plY3QiLCJ2aWV3LWVuZ2luZXMiLCJjcmVhdGUtcXVlcnkiLCJkZWxldGUtc2NhbiIsInZpZXctY29kZWJhc2hpbmciLCJpbXBvcnQtZmluZGluZ3MtZXh0ZXJuYWwtcGxhdGZvcm1zIiwiZGFzdC1jcmVhdGUtZW52aXJvbm1lbnQiLCJ2aWV3LXByZXNldCIsImFkZC1ub3RlcyIsImFib3J0LWRhdGEtcmV0ZW50aW9uIiwiYXNzaWduLXRvLWFwcGxpY2F0aW9uIiwiYXNzaWduLXByb2plY3QtYWxsLWdyb3VwcyIsInZpZXctd2ViaG9va3MiLCJvcGVuLXN1cHBvcnQtdGlja2V0IiwiZGFzdC1hZGQtbm90ZXMiLCJ2aWV3LWFjY2VzcyIsImNyZWF0ZS1zY20tY29uZmlndXJhdGlvbiIsInZpZXctcG9vbHMiLCJ1cGRhdGUtc2NtLWNvbmZpZ3VyYXRpb24iLCJzYXN0LW1pZ3JhdGlvbiIsInVwZGF0ZS1hcHBsaWNhdGlvbiIsInZpZXctcnVudGltZS1jbG91ZCIsImRhc3QtdXBkYXRlLXJlc3VsdC1zZXZlcml0eSIsInVwZGF0ZS1wcm9qZWN0LXBhcmFtcyIsInVwZGF0ZS1yZXN1bHQtY3VzdG9tLXN0YXRlLXRlc3QyNjA1IiwiY3JlYXRlLXByZXNldCIsImRhc3QtZXh0ZXJuYWwtc2NhbnMiLCJjcmVhdGUtcG9saWN5LW1hbmFnZW1lbnQiLCJ2aWV3LWZlZWRiYWNrYXBwIiwidmlldy1jbmFzIiwiZGVsZXRlLWxpbmtzIiwibWFuYWdlLXByb2plY3QiLCJ2aWV3LXRlbmFudC1wYXJhbXMiLCJ2aWV3LXNjbS1jb25maWd1cmF0aW9uIiwidmlldy1zY2FucyIsImNyZWF0ZS1zY2FuIiwidmlldy1wcm9qZWN0cyIsImNyZWF0ZS1yZXN1bHQtY3VzdG9tLXN0YXRlIiwiZGVsZXRlLXJlc3VsdC1jdXN0b20tc3RhdGUiLCJ2aWV3LXNjaGVkdWxlLXNjYW5zIiwiYW5hbHl0aWNzLWVuZ2luZWVyaW5nLWRhc2hib2FyZC12aWV3Iiwidmlldy1hdWRpdC10cmFpbCIsInZpZXctcmlzay1tYW5hZ2VtZW50IiwiYXN0LXNjYW5uZXIiLCJzdGFydC1kYXRhLXJldGVudGlvbiIsInVwZGF0ZS1yZXN1bHQtY3VzdG9tLXN0YXRlLWZpdmVzcGFjZSIsInZpZXctY2xvdWQtY29ubmVjdGlvbnMiLCJjcmVhdGUtbGlua3MiLCJhZGQtcGFja2FnZSIsImRlbGV0ZS1xdWVyeSIsInVwZGF0ZS1mZWVkYmFja2FwcCIsInVwZGF0ZS1yZXN1bHQtc3RhdGUtY3VzdG9tZGVtbzEiLCJ2aWV3LXByb2plY3QtcGFyYW1zIiwidmlldy1yaXNrLW1hbmFnZW1lbnQtZGFzaGJvYXJkIiwibWFuYWdlLWFkdmFuY2VkLXRyaWFnZS1zZXR0aW5nIiwidXBkYXRlLXJlc3VsdC1jdXN0b20tc3RhdGUtaXRheTEiLCJkZWxldGUtcG9vbCIsImNyZWF0ZS1wb29sIiwidXBkYXRlLXJlc3VsdC1jdXN0b20tc3RhdGUtc3BhY2VpbmZyb250IiwidXBkYXRlLXJlc3VsdC1jdXN0b20tc3RhdGUtYXRpc2gtMyIsInVwZGF0ZS1yZXN1bHQtY3VzdG9tLXN0YXRlLWF0aXNoLTIiLCJ1cGRhdGUtcmVzdWx0LWN1c3RvbS1zdGF0ZS1kY3VzdG9tMSIsInVwZGF0ZS1yZXN1bHQtY3VzdG9tLXN0YXRlLWRjdXN0b20yIiwiY3JlYXRlLXNjaGVkdWxlLXNjYW4iLCJjcmVhdGUtY2xvdWQtY29ubmVjdGlvbnMiLCJ1cGRhdGUtcmVzdWx0LWN1c3RvbS1zdGF0ZS1hdGlzaC0xIiwidXBkYXRlLXRlbmFudC1wYXJhbXMiLCJ1cGRhdGUtc2NhLWxpY2Vuc2Utc3RhdGUiLCJkb3dubG9hZC1zb3VyY2UtY29kZSIsImRhc3QtY2FuY2VsLXNjYW4iLCJkYXN0LXZpZXctZW52aXJvbm1lbnRzIiwiZGVsZXRlLXJ1bnRpbWUtY2xvdWQiLCJ1cGRhdGUtcmVzdWx0LWN1c3RvbS1zdGF0ZS1zcGFjZWlubGFzdCIsImNyZWF0ZS1mZWVkYmFja2FwcCIsInVwZGF0ZS1wYWNrYWdlLXN0YXRlLW11dGUiLCJ1cGRhdGUtcG9vbCIsImFjY2Vzcy1pYW0iLCJ2aWV3LXJlc3VsdHMiLCJkZWxldGUtc2NoZWR1bGUtc2NhbiIsImRlbGV0ZS1mZWVkYmFja2FwcCIsInZpZXctZGF0YS1yZXRlbnRpb24iLCJ1cGRhdGUtcmVzdWx0LWN1c3RvbS1zdGF0ZS1kdGVzdGNzIiwidXBkYXRlLXJpc2stbWFuYWdlbWVudCIsImNyZWF0ZS1ydW50aW1lLWNsb3VkIiwidXBkYXRlLXJlc3VsdCIsInVwZGF0ZS1yZXN1bHQtc3RhdGVzIiwidXBkYXRlLXJlc3VsdC1jdXN0b20tc3RhdGUtdGVzdGN1c3RvbSIsInVwZGF0ZS1wb2xpY3ktbWFuYWdlbWVudCIsInVwZGF0ZS1wcmVzZXQiLCJvdmVycmlkZS1wb2xpY3ktbWFuYWdlbWVudCIsInZpZXctcmlzay1tYW5hZ2VtZW50LXRhYiIsImRhc3QtdXBkYXRlLXJlc3VsdHMiLCJ1cGRhdGUtcmVzdWx0LWN1c3RvbS1zdGF0ZS10ZXN0Y3VzdG9tMSIsImRlbGV0ZS1zY20tY29uZmlndXJhdGlvbiIsImRhc3QtY3JlYXRlLXNjYW4iLCJtYW5hZ2UtY25hcyIsImRlbGV0ZS1wb2xpY3ktbWFuYWdlbWVudCIsInVwZGF0ZS1hY2Nlc3MiLCJhc3Qtdmlld2VyIiwiYW5hbHl0aWNzLXZ1bG5lcmFiaWxpdHktZGFzaGJvYXJkLXZpZXciLCJ1cGRhdGUtc2NhLWxpY2Vuc2UtcHJvcGVydGllcyIsIm1hbmFnZS1kYXRhLXJldGVudGlvbiIsImRhc3QtdXBkYXRlLXJlc3VsdC1zdGF0ZXMiLCJkZWxldGUtcHJlc2V0IiwidXBkYXRlLWxvY2tlZC1zY2FucyIsInZpZXctYXBwbGljYXRpb25zIiwidmlldy1saWNlbnNlIiwidXBkYXRlLXBhY2thZ2Utc3RhdGUtc25vb3plIiwibWFuYWdlLXZ1bG5lcmFiaWxpdHktYXNzaWduZWVzIiwidXBkYXRlLXJlc3VsdC1zdGF0ZS1wcm9wb3NlLW5vdC1leHBsb2l0YWJsZSIsImRhc3QtdXBkYXRlLXJlc3VsdC1zdGF0ZS1wcm9wb3NlLW5vdC1leHBsb2l0YWJsZSIsIm9yZGVyLXNlcnZpY2VzIiwiZGFzdC11cGRhdGUtZW52aXJvbm1lbnQiLCJkYXN0LWRlbGV0ZS1lbnZpcm9ubWVudCIsInVwZGF0ZS1yZXN1bHQtc3RhdGUtZGVtb3N0YXRlMyIsInVwZGF0ZS1yZXN1bHQtc3RhdGUtZGVtb3N0YXRlMiIsInVwZGF0ZS1yZXN1bHQtc3RhdGUtZGVtb3N0YXRlMSIsInZpZXctY29udHJpYnV0b3JzIiwidXBkYXRlLXJlc3VsdC1jdXN0b20tc3RhdGUtdHQtY3VzdG9tLXN0YXRlMSIsInVwZGF0ZS1yZXN1bHQtY3VzdG9tLXN0YXRlLWRlbGV0ZTEiLCJhc3QtYWRtaW4iLCJ1cGRhdGUtd2ViaG9vayIsInNlbmQtcmVwb3J0LWVtYWlsIiwibWFuYWdlLWFwcGxpY2F0aW9uIiwidXBkYXRlLXJlc3VsdC1jdXN0b20tc3RhdGUtdHQtY3VzdG9tLXN0YXRlMiJdLCJuYW1lIjoiT3JnIEFkbWluIiwidGVuYW50LXR5cGUiOiJJbnRlcm5hbCIsImFzdC1saWNlbnNlIjp7IklEIjo4NjkwNSwiVGVuYW50SUQiOiI1MGViODE0Yy05MDMwLTRkMjQtOGRiNS0wMzEwYmU0N2ZmOTMiLCJJc0FjdGl2ZSI6dHJ1ZSwiUGFja2FnZUlEIjoyMTgsIkxpY2Vuc2VEYXRhIjp7ImFjdGl2YXRpb25EYXRlIjoxNzQyMjE1MzgyOTY1LCJhbGxvd2VkRW5naW5lcyI6WyJTQVNUIiwiQVBJIFNlY3VyaXR5IiwiU0NBIiwiQXBwbGljYXRpb24gUmlzayBNYW5hZ2VtZW50IiwiQ29udGFpbmVycyIsIkRBU1QiLCJNYWxpY2lvdXMgUGFja2FnZXMiLCJTQ1MiLCJLSUNTIiwiRW50ZXJwcmlzZSBTZWNyZXRzIiwiQ29kZWJhc2hpbmciLCJDbG91ZCBJbnNpZ2h0cyIsIkNoZWNrbWFyeCBPbmUgQXNzaXN0IiwiU2VjcmV0IERldGVjdGlvbiIsIlJlcG9zaXRvcnkgSGVhbHRoIiwiQUkgUHJvdGVjdGlvbiJdLCJhcGlTZWN1cml0eUVuYWJsZWQiOnRydWUsImNvZGVCYXNoaW5nRW5hYmxlZCI6dHJ1ZSwiY29kZUJhc2hpbmdVcmwiOiJodHRwczovL2NoZWNrbWFyeC5jb2RlYmFzaGluZy5jb20iLCJjb2RlQmFzaGluZ1VzZXJzQ291bnQiOjUwLCJjdXN0b21NYXhDb25jdXJyZW50U2NhbnNFbmFibGVkIjp0cnVlLCJkYXN0RW5hYmxlZCI6dHJ1ZSwiZXhwaXJhdGlvbkRhdGUiOjE3ODc4MzEzNDAwMDAsImZlYXR1cmVzIjpbIlNTTyJdLCJsYXN0Q29tbWVudExpbWl0Ijo5MCwibWF4Q29uY3VycmVudFNjYW5zIjoyMCwibWF4UXVldWVkU2NhbnMiOjEwMDAsInJldGVudGlvblBlcmlvZCI6MzY1LCJzY3NFbmFibGVkIjp0cnVlLCJzZXJ2aWNlVHlwZSI6IlN0YW5kYXJkIiwic2VydmljZXMiOlsiMTAwMDAgQXBwc2VjIEhlbHBkZXNrIEFzc2lzdGFuY2UiLCIxMDAwMCBPcHRpbWl6YXRpb24gU2VydmljZSBPcmRlciJdLCJ1bmxpbWl0ZWRQcm9qZWN0cyI6dHJ1ZSwidXNlcnNDb3VudCI6NTB9LCJQYWNrYWdlTmFtZSI6IkN4T25lIEVudGVycHJpc2UifSwic2VydmljZV91c2Vyc19lbmFibGVkIjp0cnVlLCJmYW1pbHlfbmFtZSI6IkFkbWluIiwiZW1haWwiOiJkYW5pZWwuZ3JlZW5zcGFuQGNoZWNrbWFyeC5jb20iLCJ0ZW5hbnQiOiJwaG9lbml4X3RlbmFudCJ9.iL9oHo-BqO_8UP86AtbKlKJGt1OIg2uYCZUH03CfmQM9IdFIMU_83OYMaJtnp7lMbFvGm_Yan2aJYw3rIondiybhJr_1RqC3ha468tVge7G3mFFGEFi3M_rmbgSlSd9MmxJ_ltdEbtiLLHosUvlEhhTFiBp2T-d4NjE1rsHLllebaf0-0HTylUu6k6TrU_KHy05P1p2DKCiGFPbLWj2FEXNfLqC4G11WchK1Kxp1lRwKQqPHUUeTGDkTLKoSAzuM05XOyAXIw9PPRwAQMGale_ndJUmHJ021NTtK0rEX_XvZ2tBF396pitL3m3Q-BXq714mBsu9NOKCAeZYwmm6ZSA"
print("AIPROXY_API_KEY =", os.getenv("AIPROXY_API_KEY"))  # should NOT be None/empty

model = OpenAIModel(
client_args={
                "api_key": "",
                "base_url": "https://ast-master-components.dev.cxast.net/api/ai-proxy-py/litellm/stream",
                "default_headers": {
                    "Authorization": f"Bearer {apii_key}",
                    "X-Request-ID": "demo-request-strands-123",
                    "X-Feature": "yuval-demo-strands",
                },
            },
    # **model_config
    model_id="azure/gpt-4o",
    params={
        "max_tokens": 1000,
        "temperature": 0.7,
    }
)
agent = Agent(model=model, tools=[calculator])
response = agent("What is 2+2")
print(response)